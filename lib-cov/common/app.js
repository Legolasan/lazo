/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['common/app.js']) {
  _$jscoverage['common/app.js'] = [];
  _$jscoverage['common/app.js'][1] = 0;
  _$jscoverage['common/app.js'][4] = 0;
  _$jscoverage['common/app.js'][6] = 0;
  _$jscoverage['common/app.js'][23] = 0;
  _$jscoverage['common/app.js'][24] = 0;
  _$jscoverage['common/app.js'][28] = 0;
  _$jscoverage['common/app.js'][32] = 0;
  _$jscoverage['common/app.js'][33] = 0;
  _$jscoverage['common/app.js'][37] = 0;
  _$jscoverage['common/app.js'][38] = 0;
  _$jscoverage['common/app.js'][39] = 0;
  _$jscoverage['common/app.js'][43] = 0;
  _$jscoverage['common/app.js'][44] = 0;
  _$jscoverage['common/app.js'][46] = 0;
  _$jscoverage['common/app.js'][51] = 0;
  _$jscoverage['common/app.js'][52] = 0;
  _$jscoverage['common/app.js'][56] = 0;
  _$jscoverage['common/app.js'][57] = 0;
  _$jscoverage['common/app.js'][61] = 0;
  _$jscoverage['common/app.js'][62] = 0;
  _$jscoverage['common/app.js'][66] = 0;
  _$jscoverage['common/app.js'][67] = 0;
  _$jscoverage['common/app.js'][71] = 0;
  _$jscoverage['common/app.js'][72] = 0;
  _$jscoverage['common/app.js'][76] = 0;
  _$jscoverage['common/app.js'][77] = 0;
  _$jscoverage['common/app.js'][81] = 0;
  _$jscoverage['common/app.js'][82] = 0;
  _$jscoverage['common/app.js'][87] = 0;
  _$jscoverage['common/app.js'][88] = 0;
  _$jscoverage['common/app.js'][92] = 0;
  _$jscoverage['common/app.js'][93] = 0;
  _$jscoverage['common/app.js'][97] = 0;
  _$jscoverage['common/app.js'][98] = 0;
  _$jscoverage['common/app.js'][102] = 0;
  _$jscoverage['common/app.js'][106] = 0;
  _$jscoverage['common/app.js'][110] = 0;
  _$jscoverage['common/app.js'][114] = 0;
  _$jscoverage['common/app.js'][118] = 0;
  _$jscoverage['common/app.js'][122] = 0;
  _$jscoverage['common/app.js'][123] = 0;
  _$jscoverage['common/app.js'][126] = 0;
  _$jscoverage['common/app.js'][131] = 0;
  _$jscoverage['common/app.js'][133] = 0;
}
_$jscoverage['common/app.js'].source = ["define(['requestFilters', 'assets', 'underscore', 'utils/template', 'utils/model', 'utils/document', 'backbone', 'base'],","    function (filter, assets, _, template, model, doc, Backbone, Base) {","","    'use strict';","","    var LazoApp = Base.extend({","","        isClient: false,","","        isServer: false,","","        assets: assets,","","        css: [],","","        js: [],","","        defaultTitle: 'lazojs',","","        prefetchCss: false, // if set to true then XHR will be used to prefetch css to help prevent FOUSC","","        setData: function (key, val, ctx) {","            ctx._rootCtx.data[key] = val;","            return this;","        },","","        getData: function (key, ctx) {","            return ctx._rootCtx.data[key];","        },","","        addRequestFilter: function (regex, func) {","            filter.add(regex, func);","            return this;","        },","","        addRoutes: function (routes) {","            LAZO.routes = LAZO.routes || {};","            _.extend(LAZO.routes, routes);","            return this;","        },","","        navigate: function (ctx, routeName) {","            if (this.isClient) {","                LAZO.router.navigate(routeName, { trigger: true });","            } else {","                ctx._rawReq.reply.redirect(routeName);","            }","        },","","        loadModel: function (modelName, options) {","            model.process(modelName, options, 'model');","            return this;","        },","","        loadCollection: function (collectionName, options) {","            model.process(collectionName, options, 'collection');","            return this;","        },","","        createModel: function (modelName, attributes, options) {","            model.create(modelName, attributes, options, 'model');","            return this;","        },","","        createCollection: function (collectionName, attributes, options) {","            model.create(collectionName, attributes, options, 'collection');","            return this;","        },","","        addTag: function (name, attributes, content) {","            doc.addTag(name, attributes, content);","            return this;","        },","","        setHtmlTag: function (val) {","            doc.setHtmlTag(val);","            return this;","        },","","        setBodyClass: function (val) {","            doc.setBodyClass(val);","            return this;","        },","","        // TODO: deprecated; remove once apps have been updated","        setTitle: function (title) {","            doc.setTitle(title);","            return this;","        },","","        setDefaultTitle: function (title) {","            this.defaultTitle = title;","            return this;","        },","","        registerTemplateEngine: function (engineDef, options) {","            template.loadTemplateEngine(engineDef, options);","            return this;","        },","","        getTemplateEngine: function (engineName) {","            return template.getTemplateEngine(engineName);","        },","","        getTemplateExt: function (engineName) {","            return template.getTemplateExt(engineName);","        },","","        getDefaultTemplateEngine: function () {","            return template.getDefaultTemplateEngine();","        },","","        getDefaultTemplateEngineName: function () {","            return template.getDefaultTemplateEngineName();","        },","","        setDefaultTemplateEngine: function (engineName) {","            template.setDefaultTemplateEngine(engineName);","        },","","        _getCrumb: function () {","            if (this.isServer) {","                return;","            }","","            return $.cookie('crumb');","        }","","    });","","    _.extend(LazoApp.prototype, Backbone.Events);","","    return LazoApp;","","});"];
_$jscoverage['common/app.js'][1]++;
define(["requestFilters", "assets", "underscore", "utils/template", "utils/model", "utils/document", "backbone", "base"], (function (filter, assets, _, template, model, doc, Backbone, Base) {
  _$jscoverage['common/app.js'][4]++;
  "use strict";
  _$jscoverage['common/app.js'][6]++;
  var LazoApp = Base.extend({isClient: false, isServer: false, assets: assets, css: [], js: [], defaultTitle: "lazojs", prefetchCss: false, setData: (function (key, val, ctx) {
  _$jscoverage['common/app.js'][23]++;
  ctx._rootCtx.data[key] = val;
  _$jscoverage['common/app.js'][24]++;
  return this;
}), getData: (function (key, ctx) {
  _$jscoverage['common/app.js'][28]++;
  return ctx._rootCtx.data[key];
}), addRequestFilter: (function (regex, func) {
  _$jscoverage['common/app.js'][32]++;
  filter.add(regex, func);
  _$jscoverage['common/app.js'][33]++;
  return this;
}), addRoutes: (function (routes) {
  _$jscoverage['common/app.js'][37]++;
  LAZO.routes = (LAZO.routes || {});
  _$jscoverage['common/app.js'][38]++;
  _.extend(LAZO.routes, routes);
  _$jscoverage['common/app.js'][39]++;
  return this;
}), navigate: (function (ctx, routeName) {
  _$jscoverage['common/app.js'][43]++;
  if (this.isClient) {
    _$jscoverage['common/app.js'][44]++;
    LAZO.router.navigate(routeName, {trigger: true});
  }
  else {
    _$jscoverage['common/app.js'][46]++;
    ctx._rawReq.reply.redirect(routeName);
  }
}), loadModel: (function (modelName, options) {
  _$jscoverage['common/app.js'][51]++;
  model.process(modelName, options, "model");
  _$jscoverage['common/app.js'][52]++;
  return this;
}), loadCollection: (function (collectionName, options) {
  _$jscoverage['common/app.js'][56]++;
  model.process(collectionName, options, "collection");
  _$jscoverage['common/app.js'][57]++;
  return this;
}), createModel: (function (modelName, attributes, options) {
  _$jscoverage['common/app.js'][61]++;
  model.create(modelName, attributes, options, "model");
  _$jscoverage['common/app.js'][62]++;
  return this;
}), createCollection: (function (collectionName, attributes, options) {
  _$jscoverage['common/app.js'][66]++;
  model.create(collectionName, attributes, options, "collection");
  _$jscoverage['common/app.js'][67]++;
  return this;
}), addTag: (function (name, attributes, content) {
  _$jscoverage['common/app.js'][71]++;
  doc.addTag(name, attributes, content);
  _$jscoverage['common/app.js'][72]++;
  return this;
}), setHtmlTag: (function (val) {
  _$jscoverage['common/app.js'][76]++;
  doc.setHtmlTag(val);
  _$jscoverage['common/app.js'][77]++;
  return this;
}), setBodyClass: (function (val) {
  _$jscoverage['common/app.js'][81]++;
  doc.setBodyClass(val);
  _$jscoverage['common/app.js'][82]++;
  return this;
}), setTitle: (function (title) {
  _$jscoverage['common/app.js'][87]++;
  doc.setTitle(title);
  _$jscoverage['common/app.js'][88]++;
  return this;
}), setDefaultTitle: (function (title) {
  _$jscoverage['common/app.js'][92]++;
  this.defaultTitle = title;
  _$jscoverage['common/app.js'][93]++;
  return this;
}), registerTemplateEngine: (function (engineDef, options) {
  _$jscoverage['common/app.js'][97]++;
  template.loadTemplateEngine(engineDef, options);
  _$jscoverage['common/app.js'][98]++;
  return this;
}), getTemplateEngine: (function (engineName) {
  _$jscoverage['common/app.js'][102]++;
  return template.getTemplateEngine(engineName);
}), getTemplateExt: (function (engineName) {
  _$jscoverage['common/app.js'][106]++;
  return template.getTemplateExt(engineName);
}), getDefaultTemplateEngine: (function () {
  _$jscoverage['common/app.js'][110]++;
  return template.getDefaultTemplateEngine();
}), getDefaultTemplateEngineName: (function () {
  _$jscoverage['common/app.js'][114]++;
  return template.getDefaultTemplateEngineName();
}), setDefaultTemplateEngine: (function (engineName) {
  _$jscoverage['common/app.js'][118]++;
  template.setDefaultTemplateEngine(engineName);
}), _getCrumb: (function () {
  _$jscoverage['common/app.js'][122]++;
  if (this.isServer) {
    _$jscoverage['common/app.js'][123]++;
    return;
  }
  _$jscoverage['common/app.js'][126]++;
  return $.cookie("crumb");
})});
  _$jscoverage['common/app.js'][131]++;
  _.extend(LazoApp.prototype, Backbone.Events);
  _$jscoverage['common/app.js'][133]++;
  return LazoApp;
}));
