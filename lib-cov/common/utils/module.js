/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['common/utils/module.js']) {
  _$jscoverage['common/utils/module.js'] = [];
  _$jscoverage['common/utils/module.js'][1] = 0;
  _$jscoverage['common/utils/module.js'][4] = 0;
  _$jscoverage['common/utils/module.js'][6] = 0;
  _$jscoverage['common/utils/module.js'][9] = 0;
  _$jscoverage['common/utils/module.js'][10] = 0;
  _$jscoverage['common/utils/module.js'][11] = 0;
  _$jscoverage['common/utils/module.js'][12] = 0;
  _$jscoverage['common/utils/module.js'][13] = 0;
  _$jscoverage['common/utils/module.js'][14] = 0;
  _$jscoverage['common/utils/module.js'][17] = 0;
  _$jscoverage['common/utils/module.js'][21] = 0;
  _$jscoverage['common/utils/module.js'][22] = 0;
  _$jscoverage['common/utils/module.js'][24] = 0;
  _$jscoverage['common/utils/module.js'][29] = 0;
  _$jscoverage['common/utils/module.js'][30] = 0;
  _$jscoverage['common/utils/module.js'][32] = 0;
  _$jscoverage['common/utils/module.js'][37] = 0;
  _$jscoverage['common/utils/module.js'][43] = 0;
  _$jscoverage['common/utils/module.js'][44] = 0;
  _$jscoverage['common/utils/module.js'][47] = 0;
  _$jscoverage['common/utils/module.js'][48] = 0;
  _$jscoverage['common/utils/module.js'][49] = 0;
  _$jscoverage['common/utils/module.js'][50] = 0;
  _$jscoverage['common/utils/module.js'][55] = 0;
  _$jscoverage['common/utils/module.js'][56] = 0;
  _$jscoverage['common/utils/module.js'][58] = 0;
  _$jscoverage['common/utils/module.js'][59] = 0;
  _$jscoverage['common/utils/module.js'][62] = 0;
  _$jscoverage['common/utils/module.js'][63] = 0;
  _$jscoverage['common/utils/module.js'][64] = 0;
  _$jscoverage['common/utils/module.js'][65] = 0;
  _$jscoverage['common/utils/module.js'][67] = 0;
  _$jscoverage['common/utils/module.js'][68] = 0;
  _$jscoverage['common/utils/module.js'][74] = 0;
  _$jscoverage['common/utils/module.js'][75] = 0;
  _$jscoverage['common/utils/module.js'][76] = 0;
  _$jscoverage['common/utils/module.js'][77] = 0;
  _$jscoverage['common/utils/module.js'][79] = 0;
  _$jscoverage['common/utils/module.js'][80] = 0;
  _$jscoverage['common/utils/module.js'][83] = 0;
  _$jscoverage['common/utils/module.js'][84] = 0;
  _$jscoverage['common/utils/module.js'][85] = 0;
  _$jscoverage['common/utils/module.js'][86] = 0;
  _$jscoverage['common/utils/module.js'][87] = 0;
  _$jscoverage['common/utils/module.js'][88] = 0;
  _$jscoverage['common/utils/module.js'][89] = 0;
  _$jscoverage['common/utils/module.js'][90] = 0;
  _$jscoverage['common/utils/module.js'][93] = 0;
  _$jscoverage['common/utils/module.js'][94] = 0;
  _$jscoverage['common/utils/module.js'][101] = 0;
  _$jscoverage['common/utils/module.js'][102] = 0;
  _$jscoverage['common/utils/module.js'][105] = 0;
  _$jscoverage['common/utils/module.js'][110] = 0;
  _$jscoverage['common/utils/module.js'][111] = 0;
  _$jscoverage['common/utils/module.js'][112] = 0;
  _$jscoverage['common/utils/module.js'][113] = 0;
  _$jscoverage['common/utils/module.js'][118] = 0;
  _$jscoverage['common/utils/module.js'][121] = 0;
  _$jscoverage['common/utils/module.js'][125] = 0;
  _$jscoverage['common/utils/module.js'][131] = 0;
  _$jscoverage['common/utils/module.js'][132] = 0;
  _$jscoverage['common/utils/module.js'][133] = 0;
  _$jscoverage['common/utils/module.js'][134] = 0;
  _$jscoverage['common/utils/module.js'][138] = 0;
  _$jscoverage['common/utils/module.js'][140] = 0;
  _$jscoverage['common/utils/module.js'][141] = 0;
  _$jscoverage['common/utils/module.js'][142] = 0;
  _$jscoverage['common/utils/module.js'][143] = 0;
  _$jscoverage['common/utils/module.js'][145] = 0;
  _$jscoverage['common/utils/module.js'][146] = 0;
  _$jscoverage['common/utils/module.js'][147] = 0;
  _$jscoverage['common/utils/module.js'][151] = 0;
  _$jscoverage['common/utils/module.js'][152] = 0;
  _$jscoverage['common/utils/module.js'][155] = 0;
  _$jscoverage['common/utils/module.js'][156] = 0;
  _$jscoverage['common/utils/module.js'][160] = 0;
  _$jscoverage['common/utils/module.js'][167] = 0;
  _$jscoverage['common/utils/module.js'][170] = 0;
  _$jscoverage['common/utils/module.js'][172] = 0;
  _$jscoverage['common/utils/module.js'][173] = 0;
  _$jscoverage['common/utils/module.js'][174] = 0;
  _$jscoverage['common/utils/module.js'][175] = 0;
  _$jscoverage['common/utils/module.js'][176] = 0;
  _$jscoverage['common/utils/module.js'][180] = 0;
  _$jscoverage['common/utils/module.js'][181] = 0;
  _$jscoverage['common/utils/module.js'][182] = 0;
  _$jscoverage['common/utils/module.js'][183] = 0;
  _$jscoverage['common/utils/module.js'][186] = 0;
  _$jscoverage['common/utils/module.js'][190] = 0;
  _$jscoverage['common/utils/module.js'][195] = 0;
  _$jscoverage['common/utils/module.js'][196] = 0;
  _$jscoverage['common/utils/module.js'][197] = 0;
  _$jscoverage['common/utils/module.js'][198] = 0;
  _$jscoverage['common/utils/module.js'][200] = 0;
  _$jscoverage['common/utils/module.js'][201] = 0;
  _$jscoverage['common/utils/module.js'][204] = 0;
  _$jscoverage['common/utils/module.js'][212] = 0;
  _$jscoverage['common/utils/module.js'][215] = 0;
  _$jscoverage['common/utils/module.js'][216] = 0;
  _$jscoverage['common/utils/module.js'][219] = 0;
  _$jscoverage['common/utils/module.js'][223] = 0;
  _$jscoverage['common/utils/module.js'][224] = 0;
  _$jscoverage['common/utils/module.js'][225] = 0;
  _$jscoverage['common/utils/module.js'][226] = 0;
  _$jscoverage['common/utils/module.js'][229] = 0;
  _$jscoverage['common/utils/module.js'][232] = 0;
  _$jscoverage['common/utils/module.js'][234] = 0;
  _$jscoverage['common/utils/module.js'][236] = 0;
  _$jscoverage['common/utils/module.js'][237] = 0;
  _$jscoverage['common/utils/module.js'][243] = 0;
  _$jscoverage['common/utils/module.js'][244] = 0;
  _$jscoverage['common/utils/module.js'][245] = 0;
  _$jscoverage['common/utils/module.js'][246] = 0;
  _$jscoverage['common/utils/module.js'][249] = 0;
  _$jscoverage['common/utils/module.js'][250] = 0;
  _$jscoverage['common/utils/module.js'][251] = 0;
  _$jscoverage['common/utils/module.js'][252] = 0;
  _$jscoverage['common/utils/module.js'][255] = 0;
  _$jscoverage['common/utils/module.js'][257] = 0;
  _$jscoverage['common/utils/module.js'][268] = 0;
  _$jscoverage['common/utils/module.js'][274] = 0;
  _$jscoverage['common/utils/module.js'][275] = 0;
  _$jscoverage['common/utils/module.js'][278] = 0;
  _$jscoverage['common/utils/module.js'][279] = 0;
  _$jscoverage['common/utils/module.js'][280] = 0;
  _$jscoverage['common/utils/module.js'][283] = 0;
  _$jscoverage['common/utils/module.js'][284] = 0;
  _$jscoverage['common/utils/module.js'][287] = 0;
  _$jscoverage['common/utils/module.js'][289] = 0;
  _$jscoverage['common/utils/module.js'][292] = 0;
  _$jscoverage['common/utils/module.js'][294] = 0;
  _$jscoverage['common/utils/module.js'][297] = 0;
  _$jscoverage['common/utils/module.js'][301] = 0;
  _$jscoverage['common/utils/module.js'][302] = 0;
  _$jscoverage['common/utils/module.js'][305] = 0;
  _$jscoverage['common/utils/module.js'][306] = 0;
  _$jscoverage['common/utils/module.js'][309] = 0;
  _$jscoverage['common/utils/module.js'][310] = 0;
  _$jscoverage['common/utils/module.js'][312] = 0;
  _$jscoverage['common/utils/module.js'][313] = 0;
  _$jscoverage['common/utils/module.js'][316] = 0;
  _$jscoverage['common/utils/module.js'][317] = 0;
}
_$jscoverage['common/utils/module.js'].source = ["define(['resolver/file', 'underscore', 'text', 'lazoView', 'context', 'utils/loader', 'lazoCollectionView', 'async'],","    function (file, _, text, LazoView, Context, loader, LazoCollectionView, async) {","","    'use strict';","","    return {","","        addPath: function (path, ctx) {","            var modules;","            if (LAZO.app.isServer) {","                modules = ctx._rootCtx.modules = ctx._rootCtx.modules || [];","                modules.push(path);","                ctx.js = ctx.js || [];","                ctx.js.push(path);","            }","","            return this;","        },","","        getView: function (path, callback) {","            LAZO.require([path], function (View) {","                return callback(null, View);","            }, function (err) { // TODO: error handling","                return callback(new Error('module.getView failed for ' + path + ' : ' + err.message), null);","            });","        },","","        getTemplate: function (templatePath, callback) {","            LAZO.require(['text!' + templatePath], function (template) {","                return callback(null, template);","            }, function (err) { // TODO: error handling","                return callback(new Error('Controller _getTemplate failed for ' + templatePath + ' : ' + err.message), null);","            });","        },","","        addItemEmptyViews: function (view, callback) {","            var self = this,","                names = [],","                viewsRequiredCount,","                viewsLoadedCount = 0,","                i;","","            function concat(arr, val) {","                return arr.concat(_.isArray(val) ? val : [val]);","            }","","            function onViewLoad() {","                viewsLoadedCount++;","                if (viewsLoadedCount === viewsRequiredCount) {","                    return callback(null, view);","                }","            }","","            // get view names","            if (view.itemView) {","                names = concat(names, view.itemView);","            }","            if (view.emptyView) {","                names = concat(names, view.emptyView);","            }","","            if (_.size(view.views)) {","                _.each(view.views, function (viewSet) {","                    if (viewSet.itemView) {","                        names = concat(names, viewSet.itemView);","                    }","                    if (viewSet.emptyView) {","                        names = concat(names, viewSet.emptyView);","                    }","                });","            }","","            // create view loader tasks","            view._itemEmptyViewConstructors = {};","            names = _.uniq(names);","            i = names.length;","            viewsRequiredCount = i;","","            if (!viewsRequiredCount) {","                return callback(null, view);","            }","","            while (i) {","                i--;","                (function (i) {","                    var viewPath = file.getPath(names[i], view.ctl.name, 'view');","                    LAZO.require([viewPath], function (ItemEmptyView) {","                        self.addPath(viewPath, view.ctl.ctx);","                        view._itemEmptyViewConstructors[names[i]] = ItemEmptyView;","                        onViewLoad();","                    },","                    function (err) {","                        view._itemEmptyViewConstructors[names[i]] = LazoView;","                        onViewLoad();","                    });","                })(i);","            }","        },","","        addItemEmptyTemplatesPaths: function (view, ctx, callback) {","            if (!(view instanceof LazoCollectionView) || !view._itemEmptyViewConstructors) {","                return callback(null, view);","            }","","            var self = this,","                tasks = [],","                templatePath,","                itemEmptyViews = view.getItemEmptyViews();","","            view._itemEmptyViewTemplates = {};","            for (var i = 0; i &lt; itemEmptyViews.length; i++) {","                templatePath = file.getTemplatePath(itemEmptyViews[i]);","                view._itemEmptyViewTemplates[file.getTemplateName(itemEmptyViews[i])] = {","                    template: null,","                    path: templatePath","                };","","                self.addPath('text!' + templatePath, ctx);","            }","","            callback(null, view);","        },","","        addItemEmptyTemplates: function (view, callback) { // TODO: return a hash with paths as the key for compiling and writing","            var views = view.getItemEmptyViews(),","                templatesRequiredCount = views.length,","                templatesLoadedCount = 0,","                i = templatesRequiredCount,","                self = this;","","            function onTemplateLoad() {","                templatesLoadedCount++;","                if (templatesLoadedCount === templatesRequiredCount) {","                    return callback(null, view);","                }","            }","","            view._itemEmptyViewTemplates = {};","","            while (i) {","                i--;","                (function (i) {","                    views[i].templatePath = file.getTemplatePath(views[i]);","","                    LAZO.require(['text!' + views[i].templatePath], function (template) {","                        views[i].template = template;","                        view._itemEmptyViewTemplates[file.getTemplateName(views[i])] = {","                            template: template,","                            path: views[i].templatePath","                        };","                        self.addPath('text!' + views[i].templatePath, view.ctl.ctx);","                        onTemplateLoad();","                    },","                    function (err) {","                        views[i].template = '';","                        view._itemEmptyViewTemplates[file.getTemplateName(views[i])] = {","                            template: '',","                            path: null","                        };","                        onTemplateLoad();","                    });","                })(i);","            }","        },","","        addViewWidgets: function (view, ctx, callback) {","            var self = this,","                tasks = [];","","            this.addLoadWidgetFuncs(view, ctx, tasks);","","            if (view instanceof LazoCollectionView) {","                var views = view.getItemEmptyViews();","                for (var i = 0, il = views.length; i &lt; il; i++) {","                    var v = views[i];","                    this.addLoadWidgetFuncs(v, ctx, tasks);","                }","            }","","            if (tasks.length) {","                async.parallel(tasks, function (error, result) {","                    if (error) {","                        return callback(error);","                    }","","                    callback(null, view);","                });","            }","            else {","                callback(null, view);","            }","        },","","        addLoadWidgetFuncs: function (view, ctx, tasks) {","            var self = this;","            _.each(view.widgets, function (value, key) {","                tasks.push(function (asyncCb) {","                    self._loadWidget(view.widgets[key], ctx, {","                        success: function (Widget) {","                            view[key] = Widget;","                            asyncCb();","                        },","                        error: function (err) {","                            asyncCb(err, null);","                        }","                    });","                });","            });","        },","","        _loadWidget: function (widget, ctx, options) {","            var self = this,","                rootCtx = ctx._rootCtx,","                errBack = function (err) {","                    if (options.error) {","                        options.error(err);","                    }","                    else {","                        options.success();","                    }","                };","","            if (!options.success) {","                var err = new Error('loadWidget: No success function passed in options');","                if (options.error) {","                    options.error(err);","                }","                else {","                    throw err;","                }","            }","            LAZO.require([widget],","                function (widgetDef) {","                    var widgetCss;","","                    if (!rootCtx.dependencies) {","                        rootCtx.dependencies = {","                            css: [],","                            js: []","                        };","                    }","","                    if (widgetDef.css) {","                        widgetCss = _.isArray(widgetDef.css) ? widgetDef.css : [widgetDef.css];","                        ctx.css = widgetCss.concat(ctx.css);","                        rootCtx.dependencies.css = _.uniq(widgetCss.concat(rootCtx.dependencies.css));","                    }","","                    if (LAZO.app.isServer) {","                        self.addPath(widget, ctx);","                        self.addPath(widgetDef.js, ctx);","                        options.success();","                    }","                    else {","                        LAZO.require([widgetDef.js],","                            function (Widget) {","                                options.success(Widget);","                            },","                            errBack","                        );","                    }","                },","                errBack","            );","        },","","        addChild: function (container, cmpName, parent, options) {","            var childOptions,","                childContext,","                defaults = {","                    action: 'index'","                };","","            function onError(error) {","                _.delay(options.error, 0, error);","            }","","            function onComponentLoad(child) {","                if (!parent.children) {","                    parent.children = {};","                }","","                if (!parent.children[container]) {","                    parent.children[container] = [];","                }","","                parent.children[container].push(child);","","                _.delay(options.success, 0, child);","            }","","            options = _.defaults(options || {}, {","                error: function () {","                    return;","                },","                success: function () {","                    return;","                }","            });","","            if (typeof container !== 'string' || !container) {","                return onError(new TypeError()); // TODO: error handling","            }","","            if (typeof cmpName !== 'string' || !cmpName) {","                return onError(new TypeError()); // TODO: error handling","            }","","            childOptions = _.defaults(_.pick(options, 'action', 'rootComponent'), defaults);","            childContext = _.extend({}, parent.ctx, new Context(options), options.ctx);","","            if (parent.ctx &amp;&amp; parent.ctx._rootCtx) {","                childContext._rootCtx = parent.ctx._rootCtx;","            }","","            childOptions.ctx = childContext;","            loader(cmpName, _.extend({}, childOptions, {","                success: onComponentLoad, error: onError","            }));","        }","","    };","","});"];
_$jscoverage['common/utils/module.js'][1]++;
define(["resolver/file", "underscore", "text", "lazoView", "context", "utils/loader", "lazoCollectionView", "async"], (function (file, _, text, LazoView, Context, loader, LazoCollectionView, async) {
  _$jscoverage['common/utils/module.js'][4]++;
  "use strict";
  _$jscoverage['common/utils/module.js'][6]++;
  return ({addPath: (function (path, ctx) {
  _$jscoverage['common/utils/module.js'][9]++;
  var modules;
  _$jscoverage['common/utils/module.js'][10]++;
  if (LAZO.app.isServer) {
    _$jscoverage['common/utils/module.js'][11]++;
    modules = (ctx._rootCtx.modules = (ctx._rootCtx.modules || []));
    _$jscoverage['common/utils/module.js'][12]++;
    modules.push(path);
    _$jscoverage['common/utils/module.js'][13]++;
    ctx.js = (ctx.js || []);
    _$jscoverage['common/utils/module.js'][14]++;
    ctx.js.push(path);
  }
  _$jscoverage['common/utils/module.js'][17]++;
  return this;
}), getView: (function (path, callback) {
  _$jscoverage['common/utils/module.js'][21]++;
  LAZO.require([path], (function (View) {
  _$jscoverage['common/utils/module.js'][22]++;
  return callback(null, View);
}), (function (err) {
  _$jscoverage['common/utils/module.js'][24]++;
  return callback(new Error(("module.getView failed for " + path + " : " + err.message)), null);
}));
}), getTemplate: (function (templatePath, callback) {
  _$jscoverage['common/utils/module.js'][29]++;
  LAZO.require([("text!" + templatePath)], (function (template) {
  _$jscoverage['common/utils/module.js'][30]++;
  return callback(null, template);
}), (function (err) {
  _$jscoverage['common/utils/module.js'][32]++;
  return callback(new Error(("Controller _getTemplate failed for " + templatePath + " : " + err.message)), null);
}));
}), addItemEmptyViews: (function (view, callback) {
  _$jscoverage['common/utils/module.js'][37]++;
  var self = this, names = [], viewsRequiredCount, viewsLoadedCount = 0, i;
  _$jscoverage['common/utils/module.js'][43]++;
  function concat(arr, val) {
    _$jscoverage['common/utils/module.js'][44]++;
    return arr.concat((_.isArray(val)? val: [val]));
}
  _$jscoverage['common/utils/module.js'][47]++;
  function onViewLoad() {
    _$jscoverage['common/utils/module.js'][48]++;
    (viewsLoadedCount++);
    _$jscoverage['common/utils/module.js'][49]++;
    if ((viewsLoadedCount === viewsRequiredCount)) {
      _$jscoverage['common/utils/module.js'][50]++;
      return callback(null, view);
    }
}
  _$jscoverage['common/utils/module.js'][55]++;
  if (view.itemView) {
    _$jscoverage['common/utils/module.js'][56]++;
    names = concat(names, view.itemView);
  }
  _$jscoverage['common/utils/module.js'][58]++;
  if (view.emptyView) {
    _$jscoverage['common/utils/module.js'][59]++;
    names = concat(names, view.emptyView);
  }
  _$jscoverage['common/utils/module.js'][62]++;
  if (_.size(view.views)) {
    _$jscoverage['common/utils/module.js'][63]++;
    _.each(view.views, (function (viewSet) {
  _$jscoverage['common/utils/module.js'][64]++;
  if (viewSet.itemView) {
    _$jscoverage['common/utils/module.js'][65]++;
    names = concat(names, viewSet.itemView);
  }
  _$jscoverage['common/utils/module.js'][67]++;
  if (viewSet.emptyView) {
    _$jscoverage['common/utils/module.js'][68]++;
    names = concat(names, viewSet.emptyView);
  }
}));
  }
  _$jscoverage['common/utils/module.js'][74]++;
  view._itemEmptyViewConstructors = {};
  _$jscoverage['common/utils/module.js'][75]++;
  names = _.uniq(names);
  _$jscoverage['common/utils/module.js'][76]++;
  i = names.length;
  _$jscoverage['common/utils/module.js'][77]++;
  viewsRequiredCount = i;
  _$jscoverage['common/utils/module.js'][79]++;
  if ((! viewsRequiredCount)) {
    _$jscoverage['common/utils/module.js'][80]++;
    return callback(null, view);
  }
  _$jscoverage['common/utils/module.js'][83]++;
  while (i) {
    _$jscoverage['common/utils/module.js'][84]++;
    (i--);
    _$jscoverage['common/utils/module.js'][85]++;
    (function (i) {
  _$jscoverage['common/utils/module.js'][86]++;
  var viewPath = file.getPath(names[i], view.ctl.name, "view");
  _$jscoverage['common/utils/module.js'][87]++;
  LAZO.require([viewPath], (function (ItemEmptyView) {
  _$jscoverage['common/utils/module.js'][88]++;
  self.addPath(viewPath, view.ctl.ctx);
  _$jscoverage['common/utils/module.js'][89]++;
  view._itemEmptyViewConstructors[names[i]] = ItemEmptyView;
  _$jscoverage['common/utils/module.js'][90]++;
  onViewLoad();
}), (function (err) {
  _$jscoverage['common/utils/module.js'][93]++;
  view._itemEmptyViewConstructors[names[i]] = LazoView;
  _$jscoverage['common/utils/module.js'][94]++;
  onViewLoad();
}));
})(i);
}
}), addItemEmptyTemplatesPaths: (function (view, ctx, callback) {
  _$jscoverage['common/utils/module.js'][101]++;
  if (((! (view instanceof LazoCollectionView)) || (! view._itemEmptyViewConstructors))) {
    _$jscoverage['common/utils/module.js'][102]++;
    return callback(null, view);
  }
  _$jscoverage['common/utils/module.js'][105]++;
  var self = this, tasks = [], templatePath, itemEmptyViews = view.getItemEmptyViews();
  _$jscoverage['common/utils/module.js'][110]++;
  view._itemEmptyViewTemplates = {};
  _$jscoverage['common/utils/module.js'][111]++;
  for (var i = 0; (i < itemEmptyViews.length); (i++)) {
    _$jscoverage['common/utils/module.js'][112]++;
    templatePath = file.getTemplatePath(itemEmptyViews[i]);
    _$jscoverage['common/utils/module.js'][113]++;
    view._itemEmptyViewTemplates[file.getTemplateName(itemEmptyViews[i])] = {template: null, path: templatePath};
    _$jscoverage['common/utils/module.js'][118]++;
    self.addPath(("text!" + templatePath), ctx);
}
  _$jscoverage['common/utils/module.js'][121]++;
  callback(null, view);
}), addItemEmptyTemplates: (function (view, callback) {
  _$jscoverage['common/utils/module.js'][125]++;
  var views = view.getItemEmptyViews(), templatesRequiredCount = views.length, templatesLoadedCount = 0, i = templatesRequiredCount, self = this;
  _$jscoverage['common/utils/module.js'][131]++;
  function onTemplateLoad() {
    _$jscoverage['common/utils/module.js'][132]++;
    (templatesLoadedCount++);
    _$jscoverage['common/utils/module.js'][133]++;
    if ((templatesLoadedCount === templatesRequiredCount)) {
      _$jscoverage['common/utils/module.js'][134]++;
      return callback(null, view);
    }
}
  _$jscoverage['common/utils/module.js'][138]++;
  view._itemEmptyViewTemplates = {};
  _$jscoverage['common/utils/module.js'][140]++;
  while (i) {
    _$jscoverage['common/utils/module.js'][141]++;
    (i--);
    _$jscoverage['common/utils/module.js'][142]++;
    (function (i) {
  _$jscoverage['common/utils/module.js'][143]++;
  views[i].templatePath = file.getTemplatePath(views[i]);
  _$jscoverage['common/utils/module.js'][145]++;
  LAZO.require([("text!" + views[i].templatePath)], (function (template) {
  _$jscoverage['common/utils/module.js'][146]++;
  views[i].template = template;
  _$jscoverage['common/utils/module.js'][147]++;
  view._itemEmptyViewTemplates[file.getTemplateName(views[i])] = {template: template, path: views[i].templatePath};
  _$jscoverage['common/utils/module.js'][151]++;
  self.addPath(("text!" + views[i].templatePath), view.ctl.ctx);
  _$jscoverage['common/utils/module.js'][152]++;
  onTemplateLoad();
}), (function (err) {
  _$jscoverage['common/utils/module.js'][155]++;
  views[i].template = "";
  _$jscoverage['common/utils/module.js'][156]++;
  view._itemEmptyViewTemplates[file.getTemplateName(views[i])] = {template: "", path: null};
  _$jscoverage['common/utils/module.js'][160]++;
  onTemplateLoad();
}));
})(i);
}
}), addViewWidgets: (function (view, ctx, callback) {
  _$jscoverage['common/utils/module.js'][167]++;
  var self = this, tasks = [];
  _$jscoverage['common/utils/module.js'][170]++;
  this.addLoadWidgetFuncs(view, ctx, tasks);
  _$jscoverage['common/utils/module.js'][172]++;
  if ((view instanceof LazoCollectionView)) {
    _$jscoverage['common/utils/module.js'][173]++;
    var views = view.getItemEmptyViews();
    _$jscoverage['common/utils/module.js'][174]++;
    for (var i = 0, il = views.length; (i < il); (i++)) {
      _$jscoverage['common/utils/module.js'][175]++;
      var v = views[i];
      _$jscoverage['common/utils/module.js'][176]++;
      this.addLoadWidgetFuncs(v, ctx, tasks);
}
  }
  _$jscoverage['common/utils/module.js'][180]++;
  if (tasks.length) {
    _$jscoverage['common/utils/module.js'][181]++;
    async.parallel(tasks, (function (error, result) {
  _$jscoverage['common/utils/module.js'][182]++;
  if (error) {
    _$jscoverage['common/utils/module.js'][183]++;
    return callback(error);
  }
  _$jscoverage['common/utils/module.js'][186]++;
  callback(null, view);
}));
  }
  else {
    _$jscoverage['common/utils/module.js'][190]++;
    callback(null, view);
  }
}), addLoadWidgetFuncs: (function (view, ctx, tasks) {
  _$jscoverage['common/utils/module.js'][195]++;
  var self = this;
  _$jscoverage['common/utils/module.js'][196]++;
  _.each(view.widgets, (function (value, key) {
  _$jscoverage['common/utils/module.js'][197]++;
  tasks.push((function (asyncCb) {
  _$jscoverage['common/utils/module.js'][198]++;
  self._loadWidget(view.widgets[key], ctx, {success: (function (Widget) {
  _$jscoverage['common/utils/module.js'][200]++;
  view[key] = Widget;
  _$jscoverage['common/utils/module.js'][201]++;
  asyncCb();
}), error: (function (err) {
  _$jscoverage['common/utils/module.js'][204]++;
  asyncCb(err, null);
})});
}));
}));
}), _loadWidget: (function (widget, ctx, options) {
  _$jscoverage['common/utils/module.js'][212]++;
  var self = this, rootCtx = ctx._rootCtx, errBack = (function (err) {
  _$jscoverage['common/utils/module.js'][215]++;
  if (options.error) {
    _$jscoverage['common/utils/module.js'][216]++;
    options.error(err);
  }
  else {
    _$jscoverage['common/utils/module.js'][219]++;
    options.success();
  }
});
  _$jscoverage['common/utils/module.js'][223]++;
  if ((! options.success)) {
    _$jscoverage['common/utils/module.js'][224]++;
    var err = new Error("loadWidget: No success function passed in options");
    _$jscoverage['common/utils/module.js'][225]++;
    if (options.error) {
      _$jscoverage['common/utils/module.js'][226]++;
      options.error(err);
    }
    else {
      _$jscoverage['common/utils/module.js'][229]++;
      throw err;
    }
  }
  _$jscoverage['common/utils/module.js'][232]++;
  LAZO.require([widget], (function (widgetDef) {
  _$jscoverage['common/utils/module.js'][234]++;
  var widgetCss;
  _$jscoverage['common/utils/module.js'][236]++;
  if ((! rootCtx.dependencies)) {
    _$jscoverage['common/utils/module.js'][237]++;
    rootCtx.dependencies = {css: [], js: []};
  }
  _$jscoverage['common/utils/module.js'][243]++;
  if (widgetDef.css) {
    _$jscoverage['common/utils/module.js'][244]++;
    widgetCss = (_.isArray(widgetDef.css)? widgetDef.css: [widgetDef.css]);
    _$jscoverage['common/utils/module.js'][245]++;
    ctx.css = widgetCss.concat(ctx.css);
    _$jscoverage['common/utils/module.js'][246]++;
    rootCtx.dependencies.css = _.uniq(widgetCss.concat(rootCtx.dependencies.css));
  }
  _$jscoverage['common/utils/module.js'][249]++;
  if (LAZO.app.isServer) {
    _$jscoverage['common/utils/module.js'][250]++;
    self.addPath(widget, ctx);
    _$jscoverage['common/utils/module.js'][251]++;
    self.addPath(widgetDef.js, ctx);
    _$jscoverage['common/utils/module.js'][252]++;
    options.success();
  }
  else {
    _$jscoverage['common/utils/module.js'][255]++;
    LAZO.require([widgetDef.js], (function (Widget) {
  _$jscoverage['common/utils/module.js'][257]++;
  options.success(Widget);
}), errBack);
  }
}), errBack);
}), addChild: (function (container, cmpName, parent, options) {
  _$jscoverage['common/utils/module.js'][268]++;
  var childOptions, childContext, defaults = {action: "index"};
  _$jscoverage['common/utils/module.js'][274]++;
  function onError(error) {
    _$jscoverage['common/utils/module.js'][275]++;
    _.delay(options.error, 0, error);
}
  _$jscoverage['common/utils/module.js'][278]++;
  function onComponentLoad(child) {
    _$jscoverage['common/utils/module.js'][279]++;
    if ((! parent.children)) {
      _$jscoverage['common/utils/module.js'][280]++;
      parent.children = {};
    }
    _$jscoverage['common/utils/module.js'][283]++;
    if ((! parent.children[container])) {
      _$jscoverage['common/utils/module.js'][284]++;
      parent.children[container] = [];
    }
    _$jscoverage['common/utils/module.js'][287]++;
    parent.children[container].push(child);
    _$jscoverage['common/utils/module.js'][289]++;
    _.delay(options.success, 0, child);
}
  _$jscoverage['common/utils/module.js'][292]++;
  options = _.defaults((options || {}), {error: (function () {
  _$jscoverage['common/utils/module.js'][294]++;
  return;
}), success: (function () {
  _$jscoverage['common/utils/module.js'][297]++;
  return;
})});
  _$jscoverage['common/utils/module.js'][301]++;
  if ((((typeof container) !== "string") || (! container))) {
    _$jscoverage['common/utils/module.js'][302]++;
    return onError(new TypeError());
  }
  _$jscoverage['common/utils/module.js'][305]++;
  if ((((typeof cmpName) !== "string") || (! cmpName))) {
    _$jscoverage['common/utils/module.js'][306]++;
    return onError(new TypeError());
  }
  _$jscoverage['common/utils/module.js'][309]++;
  childOptions = _.defaults(_.pick(options, "action", "rootComponent"), defaults);
  _$jscoverage['common/utils/module.js'][310]++;
  childContext = _.extend({}, parent.ctx, new Context(options), options.ctx);
  _$jscoverage['common/utils/module.js'][312]++;
  if ((parent.ctx && parent.ctx._rootCtx)) {
    _$jscoverage['common/utils/module.js'][313]++;
    childContext._rootCtx = parent.ctx._rootCtx;
  }
  _$jscoverage['common/utils/module.js'][316]++;
  childOptions.ctx = childContext;
  _$jscoverage['common/utils/module.js'][317]++;
  loader(cmpName, _.extend({}, childOptions, {success: onComponentLoad, error: onError}));
})});
}));
