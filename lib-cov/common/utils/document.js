/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['common/utils/document.js']) {
  _$jscoverage['common/utils/document.js'] = [];
  _$jscoverage['common/utils/document.js'][1] = 0;
  _$jscoverage['common/utils/document.js'][3] = 0;
  _$jscoverage['common/utils/document.js'][5] = 0;
  _$jscoverage['common/utils/document.js'][20] = 0;
  _$jscoverage['common/utils/document.js'][23] = 0;
  _$jscoverage['common/utils/document.js'][24] = 0;
  _$jscoverage['common/utils/document.js'][28] = 0;
  _$jscoverage['common/utils/document.js'][29] = 0;
  _$jscoverage['common/utils/document.js'][33] = 0;
  _$jscoverage['common/utils/document.js'][37] = 0;
  _$jscoverage['common/utils/document.js'][41] = 0;
  _$jscoverage['common/utils/document.js'][43] = 0;
  _$jscoverage['common/utils/document.js'][44] = 0;
  _$jscoverage['common/utils/document.js'][47] = 0;
  _$jscoverage['common/utils/document.js'][51] = 0;
  _$jscoverage['common/utils/document.js'][55] = 0;
  _$jscoverage['common/utils/document.js'][58] = 0;
  _$jscoverage['common/utils/document.js'][59] = 0;
  _$jscoverage['common/utils/document.js'][61] = 0;
  _$jscoverage['common/utils/document.js'][64] = 0;
  _$jscoverage['common/utils/document.js'][65] = 0;
  _$jscoverage['common/utils/document.js'][66] = 0;
  _$jscoverage['common/utils/document.js'][67] = 0;
  _$jscoverage['common/utils/document.js'][69] = 0;
  _$jscoverage['common/utils/document.js'][73] = 0;
  _$jscoverage['common/utils/document.js'][77] = 0;
  _$jscoverage['common/utils/document.js'][81] = 0;
  _$jscoverage['common/utils/document.js'][83] = 0;
  _$jscoverage['common/utils/document.js'][84] = 0;
  _$jscoverage['common/utils/document.js'][87] = 0;
  _$jscoverage['common/utils/document.js'][88] = 0;
  _$jscoverage['common/utils/document.js'][89] = 0;
  _$jscoverage['common/utils/document.js'][90] = 0;
  _$jscoverage['common/utils/document.js'][93] = 0;
  _$jscoverage['common/utils/document.js'][94] = 0;
  _$jscoverage['common/utils/document.js'][95] = 0;
  _$jscoverage['common/utils/document.js'][96] = 0;
  _$jscoverage['common/utils/document.js'][97] = 0;
  _$jscoverage['common/utils/document.js'][100] = 0;
  _$jscoverage['common/utils/document.js'][105] = 0;
  _$jscoverage['common/utils/document.js'][106] = 0;
  _$jscoverage['common/utils/document.js'][111] = 0;
  _$jscoverage['common/utils/document.js'][112] = 0;
  _$jscoverage['common/utils/document.js'][116] = 0;
  _$jscoverage['common/utils/document.js'][119] = 0;
  _$jscoverage['common/utils/document.js'][120] = 0;
  _$jscoverage['common/utils/document.js'][121] = 0;
  _$jscoverage['common/utils/document.js'][123] = 0;
  _$jscoverage['common/utils/document.js'][127] = 0;
  _$jscoverage['common/utils/document.js'][128] = 0;
  _$jscoverage['common/utils/document.js'][129] = 0;
  _$jscoverage['common/utils/document.js'][131] = 0;
}
_$jscoverage['common/utils/document.js'].source = ["define(['jquery', 'async', 'underscore'], function ($, async, _) {","","    'use strict';","","    var htmlTag = '',","        bodyClass = '',","        tags = [],","        tagAttributeDefaults = {","            script: {","                type: 'text/javascript',","                'lazo-application': '1'","            },","            link: {","                rel: 'stylesheet',","                type: 'text/css',","                'lazo-application': '1'","            }","        };","","    return {","","        setHtmlTag: function (val) {","            htmlTag = val;","            return this;","        },","","        setBodyClass: function (val) {","            bodyClass = val;","            return this;","        },","","        getHtmlTag: function () {","            return htmlTag;","        },","","        getBodyClass: function () {","            return bodyClass;","        },","","        addTag: function (name, attributes, content) {","            tags.push(this._createTag(name, attributes, content));","","            if (LAZO.app.isClient) {","                this._addTagToDOM(name, attributes, content);","            }","","            return this;","        },","","        getTags: function () {","            return tags;","        },","","        setTitle: function (title) {","            var t = _.find(tags, function (tag) { return tag.name === 'title'; }),","                $title;","","            if (t) {","                t.content = title;","            } else {","                this.addTag('title', {}, title);","            }","","            if (LAZO.app.isClient) {","                $title = $('title');","                if ($title.length) {","                    $title.html(title);","                } else {","                    this._addTagToDOM('title', {}, title);","                }","            }","","            return this;","        },","","        updateCss: function (add, remove, callback) {","            var i,","                tasks = [],","                self = this;","","            this.$head = this.$head || $('head');","","            for (i = 0; i &lt; remove.length; i++) {","                this.$head.find('[href=\"' + remove[i] + '\"]').remove();","            }","","            for (i = 0; i &lt; add.length; i++) {","                (function (i) {","                    tasks.push(function (callback) {","                        var link  = document.createElement('link'),","                            head = self.$head[0];","","                        link.rel  = 'stylesheet';","                        link.type = 'text/css';","                        link.href = add[i];","                        link.onload = function () {","                            callback(null);","                        };","","                        head.appendChild(link);","                    });","                })(i);","            }","","            async.parallel(tasks, function (err) {","                callback();","            });","        },","","        setsDefaultTitle: function (title) {","            this.defaultTitle = title;","            return this;","        },","","        _createTag: function (name, attributes, content) {","            var defaults,","                attrStr;","","            content = content || null;","            defaults = _.clone(tagAttributeDefaults[name] || {});","            attributes = _.extend(defaults, attributes);","","            return { name: name, attributes: _.extend(defaults, attributes), content: content };","        },","","        _addTagToDOM: function (name, attributes, content) {","            this.$head = this.$head || $('head');","            var attrStr = _.reduce(attributes, function(memo, val, key){","                return memo + (' ' + key + '=' + val);","            }, '');","            this.$head.append('&lt;' + name + attrStr + '&gt;' + (content || '') + '&lt;/' + name + '&gt;');","        }","","    };","","});"];
_$jscoverage['common/utils/document.js'][1]++;
define(["jquery", "async", "underscore"], (function ($, async, _) {
  _$jscoverage['common/utils/document.js'][3]++;
  "use strict";
  _$jscoverage['common/utils/document.js'][5]++;
  var htmlTag = "", bodyClass = "", tags = [], tagAttributeDefaults = {script: {type: "text/javascript", "lazo-application": "1"}, link: {rel: "stylesheet", type: "text/css", "lazo-application": "1"}};
  _$jscoverage['common/utils/document.js'][20]++;
  return ({setHtmlTag: (function (val) {
  _$jscoverage['common/utils/document.js'][23]++;
  htmlTag = val;
  _$jscoverage['common/utils/document.js'][24]++;
  return this;
}), setBodyClass: (function (val) {
  _$jscoverage['common/utils/document.js'][28]++;
  bodyClass = val;
  _$jscoverage['common/utils/document.js'][29]++;
  return this;
}), getHtmlTag: (function () {
  _$jscoverage['common/utils/document.js'][33]++;
  return htmlTag;
}), getBodyClass: (function () {
  _$jscoverage['common/utils/document.js'][37]++;
  return bodyClass;
}), addTag: (function (name, attributes, content) {
  _$jscoverage['common/utils/document.js'][41]++;
  tags.push(this._createTag(name, attributes, content));
  _$jscoverage['common/utils/document.js'][43]++;
  if (LAZO.app.isClient) {
    _$jscoverage['common/utils/document.js'][44]++;
    this._addTagToDOM(name, attributes, content);
  }
  _$jscoverage['common/utils/document.js'][47]++;
  return this;
}), getTags: (function () {
  _$jscoverage['common/utils/document.js'][51]++;
  return tags;
}), setTitle: (function (title) {
  _$jscoverage['common/utils/document.js'][55]++;
  var t = _.find(tags, (function (tag) {
  _$jscoverage['common/utils/document.js'][55]++;
  return (tag.name === "title");
})), $title;
  _$jscoverage['common/utils/document.js'][58]++;
  if (t) {
    _$jscoverage['common/utils/document.js'][59]++;
    t.content = title;
  }
  else {
    _$jscoverage['common/utils/document.js'][61]++;
    this.addTag("title", {}, title);
  }
  _$jscoverage['common/utils/document.js'][64]++;
  if (LAZO.app.isClient) {
    _$jscoverage['common/utils/document.js'][65]++;
    $title = $("title");
    _$jscoverage['common/utils/document.js'][66]++;
    if ($title.length) {
      _$jscoverage['common/utils/document.js'][67]++;
      $title.html(title);
    }
    else {
      _$jscoverage['common/utils/document.js'][69]++;
      this._addTagToDOM("title", {}, title);
    }
  }
  _$jscoverage['common/utils/document.js'][73]++;
  return this;
}), updateCss: (function (add, remove, callback) {
  _$jscoverage['common/utils/document.js'][77]++;
  var i, tasks = [], self = this;
  _$jscoverage['common/utils/document.js'][81]++;
  this.$head = (this.$head || $("head"));
  _$jscoverage['common/utils/document.js'][83]++;
  for (i = 0; (i < remove.length); (i++)) {
    _$jscoverage['common/utils/document.js'][84]++;
    this.$head.find(("[href=\"" + remove[i] + "\"]")).remove();
}
  _$jscoverage['common/utils/document.js'][87]++;
  for (i = 0; (i < add.length); (i++)) {
    _$jscoverage['common/utils/document.js'][88]++;
    (function (i) {
  _$jscoverage['common/utils/document.js'][89]++;
  tasks.push((function (callback) {
  _$jscoverage['common/utils/document.js'][90]++;
  var link = document.createElement("link"), head = self.$head[0];
  _$jscoverage['common/utils/document.js'][93]++;
  link.rel = "stylesheet";
  _$jscoverage['common/utils/document.js'][94]++;
  link.type = "text/css";
  _$jscoverage['common/utils/document.js'][95]++;
  link.href = add[i];
  _$jscoverage['common/utils/document.js'][96]++;
  link.onload = (function () {
  _$jscoverage['common/utils/document.js'][97]++;
  callback(null);
});
  _$jscoverage['common/utils/document.js'][100]++;
  head.appendChild(link);
}));
})(i);
}
  _$jscoverage['common/utils/document.js'][105]++;
  async.parallel(tasks, (function (err) {
  _$jscoverage['common/utils/document.js'][106]++;
  callback();
}));
}), setsDefaultTitle: (function (title) {
  _$jscoverage['common/utils/document.js'][111]++;
  this.defaultTitle = title;
  _$jscoverage['common/utils/document.js'][112]++;
  return this;
}), _createTag: (function (name, attributes, content) {
  _$jscoverage['common/utils/document.js'][116]++;
  var defaults, attrStr;
  _$jscoverage['common/utils/document.js'][119]++;
  content = (content || null);
  _$jscoverage['common/utils/document.js'][120]++;
  defaults = _.clone((tagAttributeDefaults[name] || {}));
  _$jscoverage['common/utils/document.js'][121]++;
  attributes = _.extend(defaults, attributes);
  _$jscoverage['common/utils/document.js'][123]++;
  return ({name: name, attributes: _.extend(defaults, attributes), content: content});
}), _addTagToDOM: (function (name, attributes, content) {
  _$jscoverage['common/utils/document.js'][127]++;
  this.$head = (this.$head || $("head"));
  _$jscoverage['common/utils/document.js'][128]++;
  var attrStr = _.reduce(attributes, (function (memo, val, key) {
  _$jscoverage['common/utils/document.js'][129]++;
  return (memo + (" " + key + "=" + val));
}), "");
  _$jscoverage['common/utils/document.js'][131]++;
  this.$head.append(("<" + name + attrStr + ">" + (content || "") + "</" + name + ">"));
})});
}));
