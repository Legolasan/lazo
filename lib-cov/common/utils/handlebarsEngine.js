/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['common/utils/handlebarsEngine.js']) {
  _$jscoverage['common/utils/handlebarsEngine.js'] = [];
  _$jscoverage['common/utils/handlebarsEngine.js'][3] = 0;
  _$jscoverage['common/utils/handlebarsEngine.js'][5] = 0;
  _$jscoverage['common/utils/handlebarsEngine.js'][7] = 0;
  _$jscoverage['common/utils/handlebarsEngine.js'][10] = 0;
  _$jscoverage['common/utils/handlebarsEngine.js'][13] = 0;
}
_$jscoverage['common/utils/handlebarsEngine.js'].source = ["/*global define:false, $:false*/","","define(['handlebars'], function (Handlebars) {","","    return {","        compile: function(template) {","            return Handlebars.compile(template);","        },","        precompile: function (template) {","            return Handlebars.precompile(template);","        },","        execute: function(template, context, templateName) {","            return template(context);","        }","    };","});"];
_$jscoverage['common/utils/handlebarsEngine.js'][3]++;
define(["handlebars"], (function (Handlebars) {
  _$jscoverage['common/utils/handlebarsEngine.js'][5]++;
  return ({compile: (function (template) {
  _$jscoverage['common/utils/handlebarsEngine.js'][7]++;
  return Handlebars.compile(template);
}), precompile: (function (template) {
  _$jscoverage['common/utils/handlebarsEngine.js'][10]++;
  return Handlebars.precompile(template);
}), execute: (function (template, context, templateName) {
  _$jscoverage['common/utils/handlebarsEngine.js'][13]++;
  return template(context);
})});
}));
