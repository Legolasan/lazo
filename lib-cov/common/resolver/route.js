/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['common/resolver/route.js']) {
  _$jscoverage['common/resolver/route.js'] = [];
  _$jscoverage['common/resolver/route.js'][1] = 0;
  _$jscoverage['common/resolver/route.js'][3] = 0;
  _$jscoverage['common/resolver/route.js'][5] = 0;
  _$jscoverage['common/resolver/route.js'][6] = 0;
  _$jscoverage['common/resolver/route.js'][7] = 0;
  _$jscoverage['common/resolver/route.js'][8] = 0;
  _$jscoverage['common/resolver/route.js'][9] = 0;
  _$jscoverage['common/resolver/route.js'][11] = 0;
  _$jscoverage['common/resolver/route.js'][14] = 0;
  _$jscoverage['common/resolver/route.js'][16] = 0;
  _$jscoverage['common/resolver/route.js'][17] = 0;
  _$jscoverage['common/resolver/route.js'][18] = 0;
  _$jscoverage['common/resolver/route.js'][19] = 0;
  _$jscoverage['common/resolver/route.js'][21] = 0;
  _$jscoverage['common/resolver/route.js'][22] = 0;
  _$jscoverage['common/resolver/route.js'][23] = 0;
  _$jscoverage['common/resolver/route.js'][26] = 0;
}
_$jscoverage['common/resolver/route.js'].source = ["define(function () {","","    'use strict';","","    var _subRegEx = /\\{\\{\\s*([^|}]+?)\\s*(?:\\|([^}]*))?\\s*\\}\\}/g;","    var REGEX_QUERY_STRING = /(\\(?\\?.*)$/;","    var REGEX_PATH_PARAM = /:(\\w+)/g;","    var REGEX_OPT_PATH_PARAM = /\\(\\/\\{(\\w+)\\}(\\/?)\\)$/;","    var REGEX_OPT_TRAILING_SLASH = /(.*)\\(\\/\\)$/;","","    return {","","        transform: function (route) {","            var routeNoTrailingSlash = null;","","            route = '/' + route;","            route = route.replace(REGEX_QUERY_STRING, '');","            route = route.replace(REGEX_PATH_PARAM, '{$1}');","            route = route.replace(REGEX_OPT_PATH_PARAM, '/{$1?}$2');","","            if (REGEX_OPT_TRAILING_SLASH.test(route)) {","                routeNoTrailingSlash = route.replace(REGEX_OPT_TRAILING_SLASH, '$1');","                route = routeNoTrailingSlash + '/';","            }","","            return {","                routeNoTrailingSlash: routeNoTrailingSlash,","                route: route","            };","        }","","    };","","});"];
_$jscoverage['common/resolver/route.js'][1]++;
define((function () {
  _$jscoverage['common/resolver/route.js'][3]++;
  "use strict";
  _$jscoverage['common/resolver/route.js'][5]++;
  var _subRegEx = /\{\{\s*([^|}]+?)\s*(?:\|([^}]*))?\s*\}\}/g;
  _$jscoverage['common/resolver/route.js'][6]++;
  var REGEX_QUERY_STRING = /(\(?\?.*)$/;
  _$jscoverage['common/resolver/route.js'][7]++;
  var REGEX_PATH_PARAM = /:(\w+)/g;
  _$jscoverage['common/resolver/route.js'][8]++;
  var REGEX_OPT_PATH_PARAM = /\(\/\{(\w+)\}(\/?)\)$/;
  _$jscoverage['common/resolver/route.js'][9]++;
  var REGEX_OPT_TRAILING_SLASH = /(.*)\(\/\)$/;
  _$jscoverage['common/resolver/route.js'][11]++;
  return ({transform: (function (route) {
  _$jscoverage['common/resolver/route.js'][14]++;
  var routeNoTrailingSlash = null;
  _$jscoverage['common/resolver/route.js'][16]++;
  route = ("/" + route);
  _$jscoverage['common/resolver/route.js'][17]++;
  route = route.replace(REGEX_QUERY_STRING, "");
  _$jscoverage['common/resolver/route.js'][18]++;
  route = route.replace(REGEX_PATH_PARAM, "{$1}");
  _$jscoverage['common/resolver/route.js'][19]++;
  route = route.replace(REGEX_OPT_PATH_PARAM, "/{$1?}$2");
  _$jscoverage['common/resolver/route.js'][21]++;
  if (REGEX_OPT_TRAILING_SLASH.test(route)) {
    _$jscoverage['common/resolver/route.js'][22]++;
    routeNoTrailingSlash = route.replace(REGEX_OPT_TRAILING_SLASH, "$1");
    _$jscoverage['common/resolver/route.js'][23]++;
    route = (routeNoTrailingSlash + "/");
  }
  _$jscoverage['common/resolver/route.js'][26]++;
  return ({routeNoTrailingSlash: routeNoTrailingSlash, route: route});
})});
}));
