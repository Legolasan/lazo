/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['server/loader.js']) {
  _$jscoverage['server/loader.js'] = [];
  _$jscoverage['server/loader.js'][1] = 0;
  _$jscoverage['server/loader.js'][3] = 0;
  _$jscoverage['server/loader.js'][4] = 0;
  _$jscoverage['server/loader.js'][5] = 0;
  _$jscoverage['server/loader.js'][6] = 0;
  _$jscoverage['server/loader.js'][7] = 0;
  _$jscoverage['server/loader.js'][11] = 0;
  _$jscoverage['server/loader.js'][15] = 0;
  _$jscoverage['server/loader.js'][18] = 0;
  _$jscoverage['server/loader.js'][20] = 0;
  _$jscoverage['server/loader.js'][21] = 0;
  _$jscoverage['server/loader.js'][26] = 0;
}
_$jscoverage['server/loader.js'].source = ["define(['module'], function (mod) {","","    function isClientOnly(name, paths) {","        var names = name.indexOf('/') ? name.split('/') : [name];","        for (var i = 0; i &lt; names.length; i++) {","            if (paths[names[i]] &amp;&amp; paths[names[i]].indexOf('/client/') !== -1) {","                return true;","            }","        }","","        return false;","    }","","","    return {","        load: function (name, req, onload, config) {","            //req has the same API as require().","            if (name !== null &amp;&amp; name.indexOf('/client/') === -1 &amp;&amp; !isClientOnly(name, config.paths)) {","","                req([name], function (value) {","                    onload(value);","                });","","            } else {","                //Returning null for client side dependencies on server","                onload(null);","            }","        }","    };","","});"];
_$jscoverage['server/loader.js'][1]++;
define(["module"], (function (mod) {
  _$jscoverage['server/loader.js'][3]++;
  function isClientOnly(name, paths) {
    _$jscoverage['server/loader.js'][4]++;
    var names = (name.indexOf("/")? name.split("/"): [name]);
    _$jscoverage['server/loader.js'][5]++;
    for (var i = 0; (i < names.length); (i++)) {
      _$jscoverage['server/loader.js'][6]++;
      if ((paths[names[i]] && (paths[names[i]].indexOf("/client/") !== -1))) {
        _$jscoverage['server/loader.js'][7]++;
        return true;
      }
}
    _$jscoverage['server/loader.js'][11]++;
    return false;
}
  _$jscoverage['server/loader.js'][15]++;
  return ({load: (function (name, req, onload, config) {
  _$jscoverage['server/loader.js'][18]++;
  if (((name !== null) && (name.indexOf("/client/") === -1) && (! isClientOnly(name, config.paths)))) {
    _$jscoverage['server/loader.js'][20]++;
    req([name], (function (value) {
  _$jscoverage['server/loader.js'][21]++;
  onload(value);
}));
  }
  else {
    _$jscoverage['server/loader.js'][26]++;
    onload(null);
  }
})});
}));
