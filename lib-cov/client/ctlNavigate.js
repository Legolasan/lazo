/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['client/ctlNavigate.js']) {
  _$jscoverage['client/ctlNavigate.js'] = [];
  _$jscoverage['client/ctlNavigate.js'][1] = 0;
  _$jscoverage['client/ctlNavigate.js'][3] = 0;
  _$jscoverage['client/ctlNavigate.js'][5] = 0;
  _$jscoverage['client/ctlNavigate.js'][6] = 0;
  _$jscoverage['client/ctlNavigate.js'][7] = 0;
  _$jscoverage['client/ctlNavigate.js'][8] = 0;
  _$jscoverage['client/ctlNavigate.js'][11] = 0;
  _$jscoverage['client/ctlNavigate.js'][12] = 0;
  _$jscoverage['client/ctlNavigate.js'][13] = 0;
  _$jscoverage['client/ctlNavigate.js'][17] = 0;
  _$jscoverage['client/ctlNavigate.js'][18] = 0;
  _$jscoverage['client/ctlNavigate.js'][19] = 0;
  _$jscoverage['client/ctlNavigate.js'][22] = 0;
  _$jscoverage['client/ctlNavigate.js'][23] = 0;
  _$jscoverage['client/ctlNavigate.js'][24] = 0;
  _$jscoverage['client/ctlNavigate.js'][28] = 0;
  _$jscoverage['client/ctlNavigate.js'][31] = 0;
  _$jscoverage['client/ctlNavigate.js'][32] = 0;
  _$jscoverage['client/ctlNavigate.js'][33] = 0;
  _$jscoverage['client/ctlNavigate.js'][34] = 0;
  _$jscoverage['client/ctlNavigate.js'][35] = 0;
  _$jscoverage['client/ctlNavigate.js'][36] = 0;
  _$jscoverage['client/ctlNavigate.js'][37] = 0;
  _$jscoverage['client/ctlNavigate.js'][38] = 0;
  _$jscoverage['client/ctlNavigate.js'][39] = 0;
  _$jscoverage['client/ctlNavigate.js'][44] = 0;
  _$jscoverage['client/ctlNavigate.js'][45] = 0;
  _$jscoverage['client/ctlNavigate.js'][48] = 0;
  _$jscoverage['client/ctlNavigate.js'][49] = 0;
  _$jscoverage['client/ctlNavigate.js'][50] = 0;
  _$jscoverage['client/ctlNavigate.js'][52] = 0;
  _$jscoverage['client/ctlNavigate.js'][54] = 0;
  _$jscoverage['client/ctlNavigate.js'][55] = 0;
  _$jscoverage['client/ctlNavigate.js'][66] = 0;
  _$jscoverage['client/ctlNavigate.js'][67] = 0;
  _$jscoverage['client/ctlNavigate.js'][68] = 0;
  _$jscoverage['client/ctlNavigate.js'][70] = 0;
  _$jscoverage['client/ctlNavigate.js'][71] = 0;
  _$jscoverage['client/ctlNavigate.js'][72] = 0;
  _$jscoverage['client/ctlNavigate.js'][73] = 0;
  _$jscoverage['client/ctlNavigate.js'][76] = 0;
  _$jscoverage['client/ctlNavigate.js'][80] = 0;
  _$jscoverage['client/ctlNavigate.js'][81] = 0;
}
_$jscoverage['client/ctlNavigate.js'].source = ["define(['jquery', 'underscore', 'context'], function ($, _, Context) {","","    'use strict';","","    function mergeCtl(receiver, giver) {","        for (var key in receiver) { // delete any props not in new ctl","            if (_.isUndefined(giver[key]) &amp;&amp; key !== 'ctx') {","                delete receiver[key];","            }","        }","        for (key in giver) { // merge new props minus ctx","            if (key !== 'ctx') {","                receiver[key] = giver[key];","            }","        }","","        for (key in receiver.ctx) {","            if (_.isUndefined(giver.ctx[key]) &amp;&amp; key !== '_rootCtx') {","                delete receiver.ctx[key];","            }","        }","        for (key in giver.ctx) {","            if (key !== '_rootCtx') {","                receiver.ctx[key] = giver[key];","            }","        }","","        return receiver;","    }","","    function rehydrateRequest(response, callingCtl, eventData, options) {","        LAZO.require(['rehydrate/main', 'renderer'], function (rehydrate, renderer) {","            rehydrate(response, LAZO.ctl.ctx._rootCtx, function (ctl) {","                callingCtl._getEl().attr('lazo-cmp-id', ctl.cid); // update ctl.cid lazo attr","                mergeCtl(callingCtl, ctl);","                callingCtl._getEl().html(renderer.getHtml(callingCtl, callingCtl.currentView.cid, 'view'));","                renderer.attachViews(callingCtl);","                LAZO.app.trigger('navigate:controller:complete', eventData);","                options.success(eventData);","            });","        });","    }","","    return function (callingCtl, cmpName, action, params, crumb, options) {","        var exclude = _.uniq(requirejs.getLoadedModuleNames()),","            eventData = { component: name, action: action, params: params };","","        options = options || {};","        options.error = options.error || function (jqXHR, textStatus, errorThrown) {","            LAZO.error.render(JSON.parse(jqXHR.responseText));","        };","        options.success = options.success || function () {};","","        LAZO.app.trigger('navigate:controller:begin', eventData);","        $.ajax({","            type: 'POST',","            url: '/navigate',","            data: {","                name: cmpName,","                action: action,","                params: JSON.stringify(params || {}),","                crumb: crumb,","                exclude: JSON.stringify(exclude)","            },","            success: function (response) {","                var modules;","                Context.mergeRoot(LAZO.ctl.ctx._rootCtx, response.ctx._rootCtx); // merge before rehydrate","                modules = LAZO.app._getModules(response.ctx._rootCtx);","","                LAZO.app.trigger('navigate:controller:response', eventData);","                if (modules.wait) { // load bundles","                    LAZO.require(modules.modules, function () {","                        rehydrateRequest(response, callingCtl, eventData, options);","                    });","                } else {","                    rehydrateRequest(response, callingCtl, eventData, options);","                }","            },","            error: function (jqXHR, textStatus, errorThrown) {","                options.error(jqXHR, textStatus, errorThrown);","                LAZO.app.trigger('navigate:controller:error', eventData);","            },","        });","    };","","});"];
_$jscoverage['client/ctlNavigate.js'][1]++;
define(["jquery", "underscore", "context"], (function ($, _, Context) {
  _$jscoverage['client/ctlNavigate.js'][3]++;
  "use strict";
  _$jscoverage['client/ctlNavigate.js'][5]++;
  function mergeCtl(receiver, giver) {
    _$jscoverage['client/ctlNavigate.js'][6]++;
    for (var key in receiver) {
      _$jscoverage['client/ctlNavigate.js'][7]++;
      if ((_.isUndefined(giver[key]) && (key !== "ctx"))) {
        _$jscoverage['client/ctlNavigate.js'][8]++;
        (delete receiver[key]);
      }
}
    _$jscoverage['client/ctlNavigate.js'][11]++;
    for (key in giver) {
      _$jscoverage['client/ctlNavigate.js'][12]++;
      if ((key !== "ctx")) {
        _$jscoverage['client/ctlNavigate.js'][13]++;
        receiver[key] = giver[key];
      }
}
    _$jscoverage['client/ctlNavigate.js'][17]++;
    for (key in receiver.ctx) {
      _$jscoverage['client/ctlNavigate.js'][18]++;
      if ((_.isUndefined(giver.ctx[key]) && (key !== "_rootCtx"))) {
        _$jscoverage['client/ctlNavigate.js'][19]++;
        (delete receiver.ctx[key]);
      }
}
    _$jscoverage['client/ctlNavigate.js'][22]++;
    for (key in giver.ctx) {
      _$jscoverage['client/ctlNavigate.js'][23]++;
      if ((key !== "_rootCtx")) {
        _$jscoverage['client/ctlNavigate.js'][24]++;
        receiver.ctx[key] = giver[key];
      }
}
    _$jscoverage['client/ctlNavigate.js'][28]++;
    return receiver;
}
  _$jscoverage['client/ctlNavigate.js'][31]++;
  function rehydrateRequest(response, callingCtl, eventData, options) {
    _$jscoverage['client/ctlNavigate.js'][32]++;
    LAZO.require(["rehydrate/main", "renderer"], (function (rehydrate, renderer) {
  _$jscoverage['client/ctlNavigate.js'][33]++;
  rehydrate(response, LAZO.ctl.ctx._rootCtx, (function (ctl) {
  _$jscoverage['client/ctlNavigate.js'][34]++;
  callingCtl._getEl().attr("lazo-cmp-id", ctl.cid);
  _$jscoverage['client/ctlNavigate.js'][35]++;
  mergeCtl(callingCtl, ctl);
  _$jscoverage['client/ctlNavigate.js'][36]++;
  callingCtl._getEl().html(renderer.getHtml(callingCtl, callingCtl.currentView.cid, "view"));
  _$jscoverage['client/ctlNavigate.js'][37]++;
  renderer.attachViews(callingCtl);
  _$jscoverage['client/ctlNavigate.js'][38]++;
  LAZO.app.trigger("navigate:controller:complete", eventData);
  _$jscoverage['client/ctlNavigate.js'][39]++;
  options.success(eventData);
}));
}));
}
  _$jscoverage['client/ctlNavigate.js'][44]++;
  return (function (callingCtl, cmpName, action, params, crumb, options) {
  _$jscoverage['client/ctlNavigate.js'][45]++;
  var exclude = _.uniq(requirejs.getLoadedModuleNames()), eventData = {component: name, action: action, params: params};
  _$jscoverage['client/ctlNavigate.js'][48]++;
  options = (options || {});
  _$jscoverage['client/ctlNavigate.js'][49]++;
  options.error = (options.error || (function (jqXHR, textStatus, errorThrown) {
  _$jscoverage['client/ctlNavigate.js'][50]++;
  LAZO.error.render(JSON.parse(jqXHR.responseText));
}));
  _$jscoverage['client/ctlNavigate.js'][52]++;
  options.success = (options.success || (function () {
}));
  _$jscoverage['client/ctlNavigate.js'][54]++;
  LAZO.app.trigger("navigate:controller:begin", eventData);
  _$jscoverage['client/ctlNavigate.js'][55]++;
  $.ajax({type: "POST", url: "/navigate", data: {name: cmpName, action: action, params: JSON.stringify((params || {})), crumb: crumb, exclude: JSON.stringify(exclude)}, success: (function (response) {
  _$jscoverage['client/ctlNavigate.js'][66]++;
  var modules;
  _$jscoverage['client/ctlNavigate.js'][67]++;
  Context.mergeRoot(LAZO.ctl.ctx._rootCtx, response.ctx._rootCtx);
  _$jscoverage['client/ctlNavigate.js'][68]++;
  modules = LAZO.app._getModules(response.ctx._rootCtx);
  _$jscoverage['client/ctlNavigate.js'][70]++;
  LAZO.app.trigger("navigate:controller:response", eventData);
  _$jscoverage['client/ctlNavigate.js'][71]++;
  if (modules.wait) {
    _$jscoverage['client/ctlNavigate.js'][72]++;
    LAZO.require(modules.modules, (function () {
  _$jscoverage['client/ctlNavigate.js'][73]++;
  rehydrateRequest(response, callingCtl, eventData, options);
}));
  }
  else {
    _$jscoverage['client/ctlNavigate.js'][76]++;
    rehydrateRequest(response, callingCtl, eventData, options);
  }
}), error: (function (jqXHR, textStatus, errorThrown) {
  _$jscoverage['client/ctlNavigate.js'][80]++;
  options.error(jqXHR, textStatus, errorThrown);
  _$jscoverage['client/ctlNavigate.js'][81]++;
  LAZO.app.trigger("navigate:controller:error", eventData);
})});
});
}));
