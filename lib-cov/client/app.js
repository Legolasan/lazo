/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['client/app.js']) {
  _$jscoverage['client/app.js'] = [];
  _$jscoverage['client/app.js'][1] = 0;
  _$jscoverage['client/app.js'][4] = 0;
  _$jscoverage['client/app.js'][6] = 0;
  _$jscoverage['client/app.js'][7] = 0;
  _$jscoverage['client/app.js'][10] = 0;
  _$jscoverage['client/app.js'][16] = 0;
  _$jscoverage['client/app.js'][19] = 0;
  _$jscoverage['client/app.js'][22] = 0;
  _$jscoverage['client/app.js'][26] = 0;
  _$jscoverage['client/app.js'][27] = 0;
  _$jscoverage['client/app.js'][29] = 0;
  _$jscoverage['client/app.js'][30] = 0;
  _$jscoverage['client/app.js'][31] = 0;
  _$jscoverage['client/app.js'][34] = 0;
  _$jscoverage['client/app.js'][39] = 0;
  _$jscoverage['client/app.js'][40] = 0;
  _$jscoverage['client/app.js'][41] = 0;
  _$jscoverage['client/app.js'][45] = 0;
  _$jscoverage['client/app.js'][49] = 0;
  _$jscoverage['client/app.js'][51] = 0;
  _$jscoverage['client/app.js'][52] = 0;
  _$jscoverage['client/app.js'][53] = 0;
  _$jscoverage['client/app.js'][54] = 0;
  _$jscoverage['client/app.js'][55] = 0;
  _$jscoverage['client/app.js'][56] = 0;
  _$jscoverage['client/app.js'][57] = 0;
  _$jscoverage['client/app.js'][62] = 0;
  _$jscoverage['client/app.js'][63] = 0;
  _$jscoverage['client/app.js'][65] = 0;
  _$jscoverage['client/app.js'][66] = 0;
  _$jscoverage['client/app.js'][67] = 0;
  _$jscoverage['client/app.js'][73] = 0;
  _$jscoverage['client/app.js'][75] = 0;
  _$jscoverage['client/app.js'][76] = 0;
  _$jscoverage['client/app.js'][77] = 0;
  _$jscoverage['client/app.js'][78] = 0;
  _$jscoverage['client/app.js'][84] = 0;
  _$jscoverage['client/app.js'][85] = 0;
}
_$jscoverage['client/app.js'].source = ["define(['jquery', 'underscore', 'backbone', 'lazoCtl', 'renderer', 'assetsProvider', 'async', 'hermes', 'rehydrate/main', 'post', 'lib/client/state', 'lib/client/prime'],","    function ($, _, Backbone, LazoCtl, renderer, AssetsProvider, async, hermes, rehydrate, post, state, prime) {","","    'use strict';","","    LAZO.app._getModules = function (rootCtx) {","            var modules = rootCtx.dependencies.modules ? rootCtx.dependencies.modules : rootCtx.modules,","            wait = rootCtx.dependencies.modules ? true : false;","","        return {","            modules: modules,","            wait : wait","        };","    };","","    return {","","        initialize: function (options) {","            var self = this,","            modules = LAZO.app._getModules(LAZO.initConf.rootCtx);","","            this.currentLayout = LAZO.initConf.layout;","","            // if window.rootCtx.dependencies.modules then combo handled and we need to wait on response","            // else prefetch modules so that they are loading in parallel while rehydrate runs","            if (modules.wait) { // bundles loaded by boostrap.js","                return self._initialize(options);","            }","            prime(modules.modules, 'js', modules.wait, function (err) {","                if (err) {","                    return; // TODO: throw error","                }","","                self._initialize(options);","            });","        },","","        _initialize: function () {","            this._clickHandler();","            this._defineRoutes();","            hermes.start({","                state: state.createStateObj(LAZO.initConf.rootCtl, LAZO.initConf.rootCtx),","                cache: true,","                routeNotMatched: function (routePathName) {","                    LAZO.error.render({ code: 404, error: 'Not found', message: 'This is not the page you are looking for.' });","                }","            });","","            LAZO.app.trigger('application:initialize');","","            rehydrate(LAZO.initConf.rootCtl, LAZO.initConf.rootCtx, function (ctl) {","                LAZO.ctl = ctl;","                LAZO.layout = LAZO.initConf.layout;","                LAZO.crumb = LAZO.initConf.rootCtx.cookies.crumb;","                renderer.attachViews(ctl);","                LAZO.app.trigger('application:ready');","                delete LAZO.initConf;","            });","        },","","        _clickHandler: function () {","            $('body').on('click', '[lazo-navigate]', function (e) {","                var $currentTarget = $(e.currentTarget),","                    href = $currentTarget.attr('lazo-navigate') || $currentTarget.attr('href');","                if (href) {","                    e.preventDefault();","                    LAZO.app.navigate(null, href);","                }","            });","        },","","        _defineRoutes: function () {","            var self = this;","","            LAZO.router = hermes;","            _.each(LAZO.routes, function (value, path) {","                hermes.route(path, path, function (pathname, params, state) {","                    var eventData = {","                        route: path,","                        pathname: pathname,","                        parameters: _.extend(params, state.parameters)","                    };","","                    LAZO.app.trigger('navigate:application:begin', eventData);","                    post(eventData); // pass event data, so that other nav events can pick it up","                });","            });","        }","","    };","","});"];
_$jscoverage['client/app.js'][1]++;
define(["jquery", "underscore", "backbone", "lazoCtl", "renderer", "assetsProvider", "async", "hermes", "rehydrate/main", "post", "lib/client/state", "lib/client/prime"], (function ($, _, Backbone, LazoCtl, renderer, AssetsProvider, async, hermes, rehydrate, post, state, prime) {
  _$jscoverage['client/app.js'][4]++;
  "use strict";
  _$jscoverage['client/app.js'][6]++;
  LAZO.app._getModules = (function (rootCtx) {
  _$jscoverage['client/app.js'][7]++;
  var modules = (rootCtx.dependencies.modules? rootCtx.dependencies.modules: rootCtx.modules), wait = (rootCtx.dependencies.modules? true: false);
  _$jscoverage['client/app.js'][10]++;
  return ({modules: modules, wait: wait});
});
  _$jscoverage['client/app.js'][16]++;
  return ({initialize: (function (options) {
  _$jscoverage['client/app.js'][19]++;
  var self = this, modules = LAZO.app._getModules(LAZO.initConf.rootCtx);
  _$jscoverage['client/app.js'][22]++;
  this.currentLayout = LAZO.initConf.layout;
  _$jscoverage['client/app.js'][26]++;
  if (modules.wait) {
    _$jscoverage['client/app.js'][27]++;
    return self._initialize(options);
  }
  _$jscoverage['client/app.js'][29]++;
  prime(modules.modules, "js", modules.wait, (function (err) {
  _$jscoverage['client/app.js'][30]++;
  if (err) {
    _$jscoverage['client/app.js'][31]++;
    return;
  }
  _$jscoverage['client/app.js'][34]++;
  self._initialize(options);
}));
}), _initialize: (function () {
  _$jscoverage['client/app.js'][39]++;
  this._clickHandler();
  _$jscoverage['client/app.js'][40]++;
  this._defineRoutes();
  _$jscoverage['client/app.js'][41]++;
  hermes.start({state: state.createStateObj(LAZO.initConf.rootCtl, LAZO.initConf.rootCtx), cache: true, routeNotMatched: (function (routePathName) {
  _$jscoverage['client/app.js'][45]++;
  LAZO.error.render({code: 404, error: "Not found", message: "This is not the page you are looking for."});
})});
  _$jscoverage['client/app.js'][49]++;
  LAZO.app.trigger("application:initialize");
  _$jscoverage['client/app.js'][51]++;
  rehydrate(LAZO.initConf.rootCtl, LAZO.initConf.rootCtx, (function (ctl) {
  _$jscoverage['client/app.js'][52]++;
  LAZO.ctl = ctl;
  _$jscoverage['client/app.js'][53]++;
  LAZO.layout = LAZO.initConf.layout;
  _$jscoverage['client/app.js'][54]++;
  LAZO.crumb = LAZO.initConf.rootCtx.cookies.crumb;
  _$jscoverage['client/app.js'][55]++;
  renderer.attachViews(ctl);
  _$jscoverage['client/app.js'][56]++;
  LAZO.app.trigger("application:ready");
  _$jscoverage['client/app.js'][57]++;
  (delete LAZO.initConf);
}));
}), _clickHandler: (function () {
  _$jscoverage['client/app.js'][62]++;
  $("body").on("click", "[lazo-navigate]", (function (e) {
  _$jscoverage['client/app.js'][63]++;
  var $currentTarget = $(e.currentTarget), href = ($currentTarget.attr("lazo-navigate") || $currentTarget.attr("href"));
  _$jscoverage['client/app.js'][65]++;
  if (href) {
    _$jscoverage['client/app.js'][66]++;
    e.preventDefault();
    _$jscoverage['client/app.js'][67]++;
    LAZO.app.navigate(null, href);
  }
}));
}), _defineRoutes: (function () {
  _$jscoverage['client/app.js'][73]++;
  var self = this;
  _$jscoverage['client/app.js'][75]++;
  LAZO.router = hermes;
  _$jscoverage['client/app.js'][76]++;
  _.each(LAZO.routes, (function (value, path) {
  _$jscoverage['client/app.js'][77]++;
  hermes.route(path, path, (function (pathname, params, state) {
  _$jscoverage['client/app.js'][78]++;
  var eventData = {route: path, pathname: pathname, parameters: _.extend(params, state.parameters)};
  _$jscoverage['client/app.js'][84]++;
  LAZO.app.trigger("navigate:application:begin", eventData);
  _$jscoverage['client/app.js'][85]++;
  post(eventData);
}));
}));
})});
}));
