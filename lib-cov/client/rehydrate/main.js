/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['client/rehydrate/main.js']) {
  _$jscoverage['client/rehydrate/main.js'] = [];
  _$jscoverage['client/rehydrate/main.js'][1] = 0;
  _$jscoverage['client/rehydrate/main.js'][4] = 0;
  _$jscoverage['client/rehydrate/main.js'][6] = 0;
  _$jscoverage['client/rehydrate/main.js'][9] = 0;
  _$jscoverage['client/rehydrate/main.js'][10] = 0;
  _$jscoverage['client/rehydrate/main.js'][11] = 0;
  _$jscoverage['client/rehydrate/main.js'][13] = 0;
  _$jscoverage['client/rehydrate/main.js'][15] = 0;
  _$jscoverage['client/rehydrate/main.js'][16] = 0;
  _$jscoverage['client/rehydrate/main.js'][17] = 0;
  _$jscoverage['client/rehydrate/main.js'][19] = 0;
  _$jscoverage['client/rehydrate/main.js'][20] = 0;
  _$jscoverage['client/rehydrate/main.js'][21] = 0;
  _$jscoverage['client/rehydrate/main.js'][22] = 0;
  _$jscoverage['client/rehydrate/main.js'][23] = 0;
  _$jscoverage['client/rehydrate/main.js'][24] = 0;
  _$jscoverage['client/rehydrate/main.js'][25] = 0;
  _$jscoverage['client/rehydrate/main.js'][26] = 0;
  _$jscoverage['client/rehydrate/main.js'][27] = 0;
  _$jscoverage['client/rehydrate/main.js'][28] = 0;
  _$jscoverage['client/rehydrate/main.js'][29] = 0;
  _$jscoverage['client/rehydrate/main.js'][35] = 0;
  _$jscoverage['client/rehydrate/main.js'][38] = 0;
  _$jscoverage['client/rehydrate/main.js'][43] = 0;
  _$jscoverage['client/rehydrate/main.js'][44] = 0;
  _$jscoverage['client/rehydrate/main.js'][45] = 0;
  _$jscoverage['client/rehydrate/main.js'][47] = 0;
  _$jscoverage['client/rehydrate/main.js'][48] = 0;
  _$jscoverage['client/rehydrate/main.js'][49] = 0;
  _$jscoverage['client/rehydrate/main.js'][54] = 0;
  _$jscoverage['client/rehydrate/main.js'][55] = 0;
  _$jscoverage['client/rehydrate/main.js'][56] = 0;
  _$jscoverage['client/rehydrate/main.js'][58] = 0;
  _$jscoverage['client/rehydrate/main.js'][61] = 0;
  _$jscoverage['client/rehydrate/main.js'][64] = 0;
  _$jscoverage['client/rehydrate/main.js'][65] = 0;
  _$jscoverage['client/rehydrate/main.js'][67] = 0;
  _$jscoverage['client/rehydrate/main.js'][68] = 0;
  _$jscoverage['client/rehydrate/main.js'][69] = 0;
  _$jscoverage['client/rehydrate/main.js'][70] = 0;
  _$jscoverage['client/rehydrate/main.js'][73] = 0;
  _$jscoverage['client/rehydrate/main.js'][76] = 0;
  _$jscoverage['client/rehydrate/main.js'][77] = 0;
  _$jscoverage['client/rehydrate/main.js'][83] = 0;
  _$jscoverage['client/rehydrate/main.js'][84] = 0;
  _$jscoverage['client/rehydrate/main.js'][85] = 0;
  _$jscoverage['client/rehydrate/main.js'][86] = 0;
  _$jscoverage['client/rehydrate/main.js'][87] = 0;
}
_$jscoverage['client/rehydrate/main.js'].source = ["define(['lazoCtl', 'context', 'rehydrate/view', 'rehydrate/model'],","    function (LazoCtl, Context, rehydrateView, rehydrateModels) {","","    'use strict';","","    var done,","        rootCtl;","","    function rehydrateComponent(cmpDef, counters, callback) {","        counters.components++;","        LazoCtl.create(cmpDef.name, _.pick(cmpDef, 'name', 'isBase'), {","            success: function (ctl) {","                var children = cmpDef.children,","                    kids;","                cmpDef.ctx._rootCtx = cmpDef._rootCtx;","                ctl.ctx = new Context(cmpDef.ctx);","                ctl.cid = cmpDef.cid;","","                kids = ctl.children = {};","                for (var container in children) {","                    (function (container) {","                        kids[container] = [];","                        for (var i = 0; i &lt; children[container].length; i++) {","                            (function (i) {","                                var child = children[container][i];","                                child._rootCtx = cmpDef._rootCtx;","                                rehydrateComponent(child, counters, function (ctl) {","                                    kids[container][i] = ctl;","                                    rehydrate(ctl, child, counters);","                                });","                            })(i);","                        }","                    })(container);","                }","                callback(ctl);","            },","            error: function (err) {","                ; // TODO: error loading component","            }","        });","    }","","    function rehydrate(ctl, cmpDef, counters) {","        counters.components--;","        counters.models++;","","        rehydrateModels(ctl, cmpDef.ctx._rootCtx, function () {","            counters.models--;","            counters.views++;","            // views are dependent on models &amp; collections so views cannot load in parellel;","            // we could get clever, setInterval and catch errors, but there is no way to determine","            // what is causing the type error, so it would not be a reliable approach; additionally,","            // in production these will be combo handled so it will not have a big impact on performance","            rehydrateView(ctl, cmpDef, function () {","                counters.views--;","                isDone(counters);","            });","            isDone(counters);","        });","","        isDone(counters);","    }","","    function isDone(counters) {","        if (!counters.components &amp;&amp; !counters.models &amp;&amp;","            !counters.views) {","            done(rootCtl);","            done = void 0;","            rootCtl = void 0;","            return true;","        }","","        return false;","    }","","    return function (cmpDef, ctx, callback) {","        var counters = {","            components: 0,","            models: 0,","            views: 0","        };","","        done = callback;","        cmpDef._rootCtx = ctx;","        rehydrateComponent(cmpDef, counters, function (ctl) {","            rootCtl = ctl;","            rehydrate(ctl, cmpDef, counters);","        });","    };","","});"];
_$jscoverage['client/rehydrate/main.js'][1]++;
define(["lazoCtl", "context", "rehydrate/view", "rehydrate/model"], (function (LazoCtl, Context, rehydrateView, rehydrateModels) {
  _$jscoverage['client/rehydrate/main.js'][4]++;
  "use strict";
  _$jscoverage['client/rehydrate/main.js'][6]++;
  var done, rootCtl;
  _$jscoverage['client/rehydrate/main.js'][9]++;
  function rehydrateComponent(cmpDef, counters, callback) {
    _$jscoverage['client/rehydrate/main.js'][10]++;
    (counters.components++);
    _$jscoverage['client/rehydrate/main.js'][11]++;
    LazoCtl.create(cmpDef.name, _.pick(cmpDef, "name", "isBase"), {success: (function (ctl) {
  _$jscoverage['client/rehydrate/main.js'][13]++;
  var children = cmpDef.children, kids;
  _$jscoverage['client/rehydrate/main.js'][15]++;
  cmpDef.ctx._rootCtx = cmpDef._rootCtx;
  _$jscoverage['client/rehydrate/main.js'][16]++;
  ctl.ctx = new Context(cmpDef.ctx);
  _$jscoverage['client/rehydrate/main.js'][17]++;
  ctl.cid = cmpDef.cid;
  _$jscoverage['client/rehydrate/main.js'][19]++;
  kids = (ctl.children = {});
  _$jscoverage['client/rehydrate/main.js'][20]++;
  for (var container in children) {
    _$jscoverage['client/rehydrate/main.js'][21]++;
    (function (container) {
  _$jscoverage['client/rehydrate/main.js'][22]++;
  kids[container] = [];
  _$jscoverage['client/rehydrate/main.js'][23]++;
  for (var i = 0; (i < children[container].length); (i++)) {
    _$jscoverage['client/rehydrate/main.js'][24]++;
    (function (i) {
  _$jscoverage['client/rehydrate/main.js'][25]++;
  var child = children[container][i];
  _$jscoverage['client/rehydrate/main.js'][26]++;
  child._rootCtx = cmpDef._rootCtx;
  _$jscoverage['client/rehydrate/main.js'][27]++;
  rehydrateComponent(child, counters, (function (ctl) {
  _$jscoverage['client/rehydrate/main.js'][28]++;
  kids[container][i] = ctl;
  _$jscoverage['client/rehydrate/main.js'][29]++;
  rehydrate(ctl, child, counters);
}));
})(i);
}
})(container);
}
  _$jscoverage['client/rehydrate/main.js'][35]++;
  callback(ctl);
}), error: (function (err) {
  _$jscoverage['client/rehydrate/main.js'][38]++;
  ;
})});
}
  _$jscoverage['client/rehydrate/main.js'][43]++;
  function rehydrate(ctl, cmpDef, counters) {
    _$jscoverage['client/rehydrate/main.js'][44]++;
    (counters.components--);
    _$jscoverage['client/rehydrate/main.js'][45]++;
    (counters.models++);
    _$jscoverage['client/rehydrate/main.js'][47]++;
    rehydrateModels(ctl, cmpDef.ctx._rootCtx, (function () {
  _$jscoverage['client/rehydrate/main.js'][48]++;
  (counters.models--);
  _$jscoverage['client/rehydrate/main.js'][49]++;
  (counters.views++);
  _$jscoverage['client/rehydrate/main.js'][54]++;
  rehydrateView(ctl, cmpDef, (function () {
  _$jscoverage['client/rehydrate/main.js'][55]++;
  (counters.views--);
  _$jscoverage['client/rehydrate/main.js'][56]++;
  isDone(counters);
}));
  _$jscoverage['client/rehydrate/main.js'][58]++;
  isDone(counters);
}));
    _$jscoverage['client/rehydrate/main.js'][61]++;
    isDone(counters);
}
  _$jscoverage['client/rehydrate/main.js'][64]++;
  function isDone(counters) {
    _$jscoverage['client/rehydrate/main.js'][65]++;
    if (((! counters.components) && (! counters.models) && (! counters.views))) {
      _$jscoverage['client/rehydrate/main.js'][67]++;
      done(rootCtl);
      _$jscoverage['client/rehydrate/main.js'][68]++;
      done = (void 0);
      _$jscoverage['client/rehydrate/main.js'][69]++;
      rootCtl = (void 0);
      _$jscoverage['client/rehydrate/main.js'][70]++;
      return true;
    }
    _$jscoverage['client/rehydrate/main.js'][73]++;
    return false;
}
  _$jscoverage['client/rehydrate/main.js'][76]++;
  return (function (cmpDef, ctx, callback) {
  _$jscoverage['client/rehydrate/main.js'][77]++;
  var counters = {components: 0, models: 0, views: 0};
  _$jscoverage['client/rehydrate/main.js'][83]++;
  done = callback;
  _$jscoverage['client/rehydrate/main.js'][84]++;
  cmpDef._rootCtx = ctx;
  _$jscoverage['client/rehydrate/main.js'][85]++;
  rehydrateComponent(cmpDef, counters, (function (ctl) {
  _$jscoverage['client/rehydrate/main.js'][86]++;
  rootCtl = ctl;
  _$jscoverage['client/rehydrate/main.js'][87]++;
  rehydrate(ctl, cmpDef, counters);
}));
});
}));
